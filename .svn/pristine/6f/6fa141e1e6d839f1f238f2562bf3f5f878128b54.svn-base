package com.spark.network.handler;

import java.util.Map;

import javax.annotation.Resource;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.spark.network.entity.User;
import com.spark.network.service.IRoleService;
import com.spark.network.service.IUserService;

@Controller
public class UserController {

	@Resource(name = "userService")
	private IUserService userService;
	@Resource(name = "roleService")
	private IRoleService roleService;

	@RequestMapping(value = "/user", method = RequestMethod.POST)
	public String addUser(User user) {
	    user.setIsExist("是");
		userService.save(user);
		return"redirect:/user-list";
	}
	@RequestMapping(value = "/find/{account}", method = RequestMethod.GET)
	public String getUser(@PathVariable(value = "account") String account) {
		userService.getByAccount(account);
		return "/system/main";
	}
	@RequestMapping(value = "/user/{id}", method = RequestMethod.DELETE)
	public String delete(@PathVariable(value = "id") Integer id) {
	User user =	userService.getById(id);
	user.setIsExist("否");
	userService.save(user);
	return "redirect:/user-list";
	}
	
	@ResponseBody
	@RequestMapping(value="/ajaxValidateLastName",method=RequestMethod.POST)
	public String validateLastName(@RequestParam(value="lastName",required=true) String lastName){
		User user = userService.getByAccount(lastName);
		if(user == null){
			return "0";
		}else{
			return "1";
		}
	}
	
	@RequestMapping(value = "/user-list")
	public String list(@RequestParam(value="pageNo", required=false, defaultValue="1") String pageNoStr, Map<String, Object> map){
		int pageNo = 1;
		try {
			//对 pageNo 的校验
			pageNo = Integer.parseInt(pageNoStr);
			if(pageNo < 1){
				pageNo = 1;
			}
		} catch (Exception e) {
			e.getStackTrace();
		}
			Page<User> page = userService.getPage(pageNo, 8);
			map.put("page", page);
		return "user/list";
	}
	
	@RequestMapping(value = "/user-add")
	public String add(Map<String, Object> map) {
		map.put("user", new User());
		map.put("roles", roleService.getAll());
		return "user/addUser";
	}
	

}
